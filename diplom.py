from telethon import TelegramClient, events
import socks, asyncio

# Берем данные разработчика, зарегистрировав приложение на сайте telegram.org
api_id = 15915103
api_hash = 'e3f9fc0cbd8a477f6120b5f4cdcaf665'

#Создаем клиент Telegram, используя авторизацию через прокси
client = TelegramClient('acc', api_id, api_hash, proxy=(socks.SOCKS5, '45.95.150.64', 8000, True, 'G6wBf5', 'GVoXQA'))

print("USA_7 - Started")

#Канал для пересылки заявок
my_channel_id = -1002010934596

#База чатов и каналов для поиска и обработки заявок
channels_full = [-1001451211985, -1001562357122, -1001156193082, -1001582448430, -1001733996046, -1001636921716, -1001649480942,
              -1001770041603, -1001321187602, -1001355251397, -1001605451369, -1001263716670, -1001617131461, -1001796454917,
              -1001434064507, 1001317379385, -1001438298429, -1001265338303, -1001442937604, -1001192611072, -1001271398750,
              -1001669984427, -1001546247407, -1001460940481, -1001367894493, -1001474839150, -1001736235689, -1001499862807,
              -1001745090309, -1001242873641, -1001513982592, -1001250590505, -1001418651811, -1001225138023, -1001254238745,
              -1001273061948, -1001647788840, -1001263233484, -1001456616038, -1001404652265, -1001647216387, -1001360151362,
              -1001313032628, -1001375624726, -1001243536944, -1001377265869, -1001127950512, -1001289147868, -1001425875581,
              -1001252203991, -1001932555048, -1001348489999, -1001605044567, -1001476971751, -1001318197938, -1001523821496,
              -1001461220116, -1001914064988, -1001233429107, -1002007541782, -1001677587280, -1001578357018, -1001516450376,
              -1001497924612, -1001163797425, -1001354442291, -1001626008146, -1001530484255, -1001226675280, -1001209503065,
              -1001124205330, -1001747124567, -1001611404800, -1001162809258, -1001381048902, -1001778460865, -1001586660313,
              -1001750117159, -1001327558688, -1001471725092, -1001349433009, -1001400751685, -1001279580013, -1001848832286,
              -1001508343588, -1001813767124, -1001143063102, -1001113237926, -1001400175014, -1001063542127, -1001286840620,
              -1001267636272, -1001799919407, -1001122046018, -1001303819569, -1001400814782, -1001446782775, -1001313757881,
              -1001298085106, -1002009119521, -1002003213092, -1002058276491, -1002003213092]

#Базы ключевых слов для фильтрации сообщений
stop_words = ['помогу', 'сделаю', 'настриваю', 'создам', 'помогаю', 'работаю', 'даю', 'зовут', 'предоставляю', 'доход', 'умею', 'софт', 'сервис',
              'создаем', 'хочешь', 'рилсмейкер', 'могу', 'обратись', 'soft', 'менеджер', 'копирайтер', 'ассистент', 'рассылка', 'рассылок', 'сделаем',
              'хотите', 'seo', 'курьер', 'монтаж', 'являюсь', 'занимаюсь', 'руководитель', 'нарушение', 'подписаться', 'создаём', 'хотите',
              'прошёл', 'задолбался', 'искать', 'нужны', 'https://t.me/golubin_bot', 'продюсер', 'предлагаю', 'кастдев', 'умеем', 'дарю', 'интервью', 'спамить',
              'правила', 'возьму', 'тестированию', 'тестирование', 'тестировщик', 'тестированием', 'контекстолог', 'предлагаю', 'выставка']
first_words = ['ищу', 'ищем', 'нужен', 'вакансия', 'работа', 'требуется', 'нужно', 'надо']
second_words = ['таргетолог', 'таргетинг', 'таргет', 'target']

#Черный список спам аккаунтов
black_list = [6909079838, 6781109803, 6908090524, 5941712557, 6377142382, 6224987052, 5794626712, 6831979466, 6543105502, 6027863989, 5652094590, 6161630317,
              6403840628, 5963554554, 6471806424, 465992112, 6584801410, 6344548514, 5334751834, 5941712557, 5977310560, 5763087110, 5725342294, 6616634154,
              5446739679, 6566164838, 5282756989, 6408742643, 6206484268, 6668524203, 5639278809, 6452708490, 6080496264, 6925619019, 6790297981, 5397768464,
              6058397482, 5890578851, 5397768464, 5798308443, 6089764826, 6660627005]

#Данные для работы антиспам системы
forwarded_messages = set()
clear_interval = 6 * 60 * 60

#Функция для автоматической очистки списка пересланных сообщений
async def clear_forwarded_messages():
    while True:
        await asyncio.sleep(clear_interval)
        forwarded_messages.clear()

# Хендлер для пересылки сообщений
@client.on(events.NewMessage(chats=channels_full))
async def forward_messages(event):
    text = event.message.to_dict()['message'].lower()
    try:
        user_id = event.from_id.user_id
    except AttributeError:
        user_id = None

    #Проверка стоп слов (1 уровень фильтрации)
    if any(word in text for word in stop_words):
        return
    #Проверка стоп слов (2 и 3 уровни фильтрации)
    elif any(word in text for word in first_words) and any(word in text for word in second_words):
        #Работа антиспам системы:
        if text not in forwarded_messages and user_id not in black_list:
            forwarded_messages.add(text)
            await client.forward_messages(my_channel_id, event.message)
        else:
            return

# Запуск клиента Telegram в режиме ожидания событий и активация таймера
async def main():
    while True:
        try:
            await client.start()
            client.add_event_handler(forward_messages, events.NewMessage(chats=channels_full))
            timer_task = asyncio.create_task(clear_forwarded_messages())
            await timer_task
        except Exception as e:
            print(f"Ошибка при запуске клиента: {e}")
            await asyncio.sleep(60)

if __name__ == '__main__':
    asyncio.run(main())